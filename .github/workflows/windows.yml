# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Windows

env:
  PYTHONUNBUFFERED: 1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.7]
        architecture: [x64, x86]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Download SDR Drivers
        run: |
          echo "Downloading SDR drivers..."
          git clone --depth 1 https://gitlab.com/jopohl/sdr_drivers
          echo "Downloaded SDR drivers."
          if ("$(env:PYARCH)" -eq "x86") {
          echo "Using 32-bit SDR libraries..."
          Copy-Item "sdr_drivers\win-32.zip" -Destination "C:\windlls.zip"
          }
          else {
          echo "Using 64-bit SDR libraries..."
          Copy-Item "sdr_drivers\win-64.zip" -Destination "C:\windlls.zip"
          }
          Copy-Item "sdr_drivers\*.whl"  -Destination "C:\"
        env:
           PYARCH: ${{ matrix.architecture }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r data/requirements.txt
          pip install pytest pytest-faulthandler

          pip install --upgrade wheel twine six appdirs packaging setuptools pyinstaller pywin32
          pip install "pyaudio; python_version < '3.7'"
          pip install "C:\PyAudio-0.2.11-cp37-cp37m-win_amd64.whl; python_version == '3.7'"
          pip install "C:\PyAudio-0.2.11-cp37-cp37m-win32.whl; python_version == '3.7'"
          python -c "import tempfile, os; open(os.path.join(tempfile.gettempdir(), 'urh_releasing'), 'w').close()"

      - name: Unzip DLLs
        run: 7z x C:\windlls.zip -osrc\urh\dev\native\lib\shared

      - name: Build Cython Extensions
        run: python src/urh/cythonext/build.py

      - name: Build Wheel
        run: python setup.py bdist_wheel

      - name: Build .exe Installer
        run: |
          python data/pyinstaller_helper.py
          for /f %%i in ('python src/urh/version.py') do set URHVERSION=%%i
          iscc /dMyAppVersion=%URHVERSION% /dArch=$(python.arch) data/inno.iss
        shell: cmd

      - name: Check urh_debug.exe
        run: |
          cd pyinstaller\urh
          urh_debug.exe autoclose

      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
