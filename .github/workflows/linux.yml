# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Linux

env:
  PYTHONUNBUFFERED: 1

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]
#        exclude:
#          - os: macos-latest
#            python-version: 3.8
#          - os: windows-latest
#            python-version: 3.6
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip twine
          pip install -r data/requirements.txt
          sudo apt-get install libhackrf-dev librtlsdr-dev xvfb libxkbcommon-x11-0 x11-utils
          pip install twine setuptools wheel pytest pytest-xvfb pytest-cov pytest-faulthandler
          python -c "import tempfile, os; open(os.path.join(tempfile.gettempdir(), 'urh_releasing'), 'w').close()"

      - name: Build Cython Extensions
        run: python src/urh/cythonext/build.py

      - name: Create sdist
        run: python setup.py sdist
        if: matrix.python-version == 3.7

      - name: Build manylinux2014
        run: |
          docker run --rm \
          -e PYVER=$(python -c "import sys; print('%s%s' % (sys.version_info.major, sys.version_info.minor))") \
          -v `pwd`:/io jopohl/urh_manylinux2014 /io/data/make_manylinux2014_wheels.sh

      - name: Check Wheel
        run: |
          pip install dist/*.whl
          urh --version
          python data/check_native_backends.py
          xvfb-run urh autoclose

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

      - name: Run PyTest
        run: |
          if [ $(python -c "import sys; print(str(sys.version_info.major)+'.'+str(sys.version_info.minor))") == "3.7" ]
          then
            touch tests/show_gui
            cp tests/.coveragerc .
            pytest -s -v --cov=src --cov-config=.coveragerc tests
          else
            pytest -s -v tests
          fi
